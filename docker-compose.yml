version: '3.8'
services:
  db:
    image: postgres:17
    environment:
      POSTGRES_USER: your_user
      POSTGRES_PASSWORD: your_password
      POSTGRES_DB: pump_app_db
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "your_user", "-d", "pump_app_db"]
      interval: 10s
      retries: 5
      start_period: 10s

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      DB_HOST: db
      DB_USER: your_user
      DB_PASSWORD: your_password
      DB_NAME: pump_app_db
      DB_PORT: 5432
      PORT: 5000
    depends_on:
      db:
        condition: service_healthy
    # для запуска миграции
    command: ["./wait-for-db.sh", "db", "3306", "node", "dist/temp/migrate.js", "&&", "node", "dist/server.js"]

    # для запуска сервера
    # command: ["./wait-for-db.sh", "db", "5432", "node", "dist/server.js"]
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - VITE_API_URL=${VITE_API_URL}
    env_file: .env
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - app-network

volumes:
  postgres-data:

networks:
  app-network:
    driver: bridge